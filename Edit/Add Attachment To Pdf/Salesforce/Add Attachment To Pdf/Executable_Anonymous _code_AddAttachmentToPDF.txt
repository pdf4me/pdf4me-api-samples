// ========================================
// Execute Anonymous Script for AddAttachmentToPDF
// ========================================

// Step 1: Set up test data
String pdfUrl = 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf';
String outputFileName = 'TestDocument_WithAttachment_' + Datetime.now().format('yyyyMMdd_HHmmss');

// Step 2: Fetch PDF from URL and convert to base64
System.debug('=== Step 2: Fetching PDF from URL ===');
Http http = new Http();
HttpRequest pdfRequest = new HttpRequest();
pdfRequest.setEndpoint(pdfUrl);
pdfRequest.setMethod('GET');
HttpResponse pdfResponse = http.send(pdfRequest);

if (pdfResponse.getStatusCode() != 200) {
    System.debug('ERROR: Failed to fetch PDF. Status: ' + pdfResponse.getStatusCode());
    return;
}

Blob pdfBlob = pdfResponse.getBodyAsBlob();
String pdfBase64 = EncodingUtil.base64Encode(pdfBlob);
System.debug('PDF fetched successfully. Size: ' + pdfBlob.size() + ' bytes');

// Step 3: Create a sample attachment (text file)
System.debug('=== Step 3: Creating sample attachment ===');
String attachmentContent = 'This is a sample attachment created on ' + Datetime.now().format() + '\n' +
                         'This attachment was added to the PDF using PDF4me API.\n' +
                         'This demonstrates the attachment functionality.';
String attachmentBase64 = EncodingUtil.base64Encode(Blob.valueOf(attachmentContent));
String attachmentName = 'sample_attachment.txt';

System.debug('Attachment created. Size: ' + attachmentContent.length() + ' characters');

// Step 4: Call the AddAttachmentToPDF method
System.debug('=== Step 4: Calling AddAttachmentToPDF.addAttachmentToPDFAndSave ===');
AddAttachmentToPDF.AttachmentResult result = AddAttachmentToPDF.addAttachmentToPDFAndSave(
    pdfBase64, 
    attachmentBase64, 
    attachmentName, 
    outputFileName
);

// Step 5: Display results
System.debug('=== Step 5: Results ===');
if (result.error != null) {
    System.debug('ERROR: ' + result.error);
} else {
    System.debug('SUCCESS: Attachment added to PDF successfully!');
    System.debug('Output File Name: ' + outputFileName);
    System.debug('Base64 Length: ' + (result.base64 != null ? result.base64.length() : 0));
    System.debug('Download URL: ' + result.downloadUrl);
    
    // Step 6: Extract ContentDocumentId from download URL for public link creation
    if (result.downloadUrl != null && result.downloadUrl.contains('/sfc/servlet.shepherd/document/download/')) {
        String contentDocumentId = result.downloadUrl.substringAfterLast('/');
        System.debug('ContentDocumentId: ' + contentDocumentId);
        
        // Step 7: Create public link
        System.debug('=== Step 7: Creating public link ===');
        String publicUrl = AddAttachmentToPDF.makeFilePublic(contentDocumentId);
        System.debug('Public URL: ' + publicUrl);
        
        if (!publicUrl.contains('ERROR:')) {
            System.debug('SUCCESS: Public link created successfully!');
            System.debug('You can now access the file at: ' + publicUrl);
        } else {
            System.debug('ERROR creating public link: ' + publicUrl);
        }
    }
}

System.debug('=== Test Complete ===');